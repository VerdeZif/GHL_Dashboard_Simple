name: Django CI

# Cu√°ndo se ejecuta
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest

    # Base de datos temporal para los tests
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    # Variables de entorno necesarias para Django y GHL
    env:
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/test_db
      DJANGO_SECRET_KEY: testsecretkey
      DEBUG: "True"
      GHL_PRIVATE_TOKEN: fake_token
      GHL_BASE_URL: https://services.leadconnectorhq.com
      GHL_LOCATION_ID: fake_location
      GHL_CALENDAR_ID: fake_calendar

    steps:
      - name: üßæ Clonar el repositorio
        uses: actions/checkout@v4

      - name: üêç Configurar Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: üì¶ Instalar dependencias
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install django djangorestframework requests psycopg2-binary pytest pytest-django

      - name: ‚öôÔ∏è Configurar base de datos
        run: |
          python manage.py migrate

      - name: üß™ Ejecutar tests
        run: |
          pytest -v --disable-warnings
